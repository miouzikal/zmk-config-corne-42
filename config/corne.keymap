#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE MINUS>; };

/ {
    behaviors {
        lhmt: left_hand_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_mod_tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
            hold-trigger-on-release;
        };

        rhmt: right_hand_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_mod_tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        numbers: numbers {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMBERS";
            bindings = <&none>, <&none>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        Q1: Q1 {
            compatible = "zmk,behavior-mod-morph";
            label = "Q1";
            bindings = <&kp Q>, <&kp KP_NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        W2: W2 {
            compatible = "zmk,behavior-mod-morph";
            label = "W2";
            bindings = <&kp W>, <&kp KP_NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        E3: E3 {
            compatible = "zmk,behavior-mod-morph";
            label = "E3";
            bindings = <&kp E>, <&kp KP_NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        R4: R4 {
            compatible = "zmk,behavior-mod-morph";
            label = "R4";
            bindings = <&kp R>, <&kp KP_NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        T5: T5 {
            compatible = "zmk,behavior-mod-morph";
            label = "T5";
            bindings = <&kp T>, <&kp KP_NUMBER_5>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        Y6: Y6 {
            compatible = "zmk,behavior-mod-morph";
            label = "Y6";
            bindings = <&kp Y>, <&kp KP_NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        U7: U7 {
            compatible = "zmk,behavior-mod-morph";
            label = "U7";
            bindings = <&kp U>, <&kp KP_NUMBER_7>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        I8: I8 {
            compatible = "zmk,behavior-mod-morph";
            label = "I8";
            bindings = <&kp I>, <&kp KP_NUMBER_8>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        O9: O9 {
            compatible = "zmk,behavior-mod-morph";
            label = "O9";
            bindings = <&kp O>, <&kp KP_NUMBER_9>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        P0: P0 {
            compatible = "zmk,behavior-mod-morph";
            label = "P0";
            bindings = <&kp P>, <&kp KP_NUMBER_0>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        lbd: LeftBracketDollar {
            compatible = "zmk,behavior-mod-morph";
            label = "LeftBracketDollar";
            bindings = <&kp LEFT_BRACKET>, <&kp DOLLAR>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        lh: left_home {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_HOME";
            bindings = <&kp LEFT_ARROW>, <&kp HOME>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        re: right_end {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_END";
            bindings = <&kp RIGHT>, <&kp END>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        upu: up_pageup {
            compatible = "zmk,behavior-mod-morph";
            label = "UP_PAGEUP";
            bindings = <&kp UP_ARROW>, <&kp PAGE_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        dpd: down_pagedown {
            compatible = "zmk,behavior-mod-morph";
            label = "DOWN_PAGEDOWN";
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };

    macros {
        macro_caret: caret_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp SPACE>;
            label = "CARET_MACRO";
        };

        left_hyper_macro: hyper_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp LEFT_ALT &kp LEFT_CONTROL &kp LEFT_SHIFT>;
            label = "HYPER_MACRO";
        };

        right_hyper_macro: right_hyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_GUI &kp RIGHT_ALT &kp RIGHT_CONTROL &kp RIGHT_SHIFT>;
            label = "RIGHT_HYPER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp TAB          &Q1                   &W2                 &E3                &R4               &T5            &Y6          &U7                &I8                 &O9                  &P0                       &lbd
&kp NON_US_BSLH  &lhmt LEFT_CONTROL A  &lhmt LEFT_SHIFT S  &lhmt LEFT_ALT D   &lhmt LEFT_GUI F  &kp G          &kp H        &rhmt RIGHT_GUI J  &rhmt RIGHT_ALT K   &rhmt RIGHT_SHIFT L  &rhmt RIGHT_CONTROL SEMI  &kp BACKSLASH
&caps_word       &kp Z                 &kp X               &kp C              &kp V             &kp B          &kp N        &kp M              &kp COMMA           &kp DOT              &kp SLASH                 &kp SINGLE_QUOTE
                                                           &left_hyper_macro  &lt 2 ESCAPE      &lt 1 ENTER    &lt 1 SPACE  &lt 2 BACKSPACE    &right_hyper_macro
            >;

            label = "base";
        };

        Symbol {
            bindings = <
&trans   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp RS(NUMBER_6)       &kp AMPERSAND   &kp ASTERISK   &macro_caret  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans   &trans           &trans       &trans    &trans      &trans         &kp RA(RIGHT_BRACKET)  &kp KP_MINUS    &kp KP_EQUAL   &kp KP_PLUS   &kp RA(N9)            &kp RA(N0)
&kp F13  &trans           &trans       &trans    &trans      &trans         &trans                 &kp UNDERSCORE  &kp RA(COMMA)  &kp RA(DOT)   &kp RA(N7)            &kp RA(N8)
                                       &trans    &trans      &trans         &trans                 &trans          &trans
            >;

            label = "symbol";
        };

        Control {
            bindings = <
&kp F1   &kp F2  &kp F3  &kp F4      &kp F5      &kp F6        &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans   &trans  &trans  &bt BT_CLR  &bt BT_NXT  &bt BT_PRV    &lh     &dpd    &upu    &re      &trans   &trans
&kp F13  &trans  &trans  &trans      &trans      &trans        &trans  &trans  &trans  &trans   &trans   &trans
                         &trans      &trans      &trans        &trans  &trans  &trans
            >;

            label = "control";
        };
    };

    // #define HOST_OS 2 // macOS
    // #include "zmk-helpers/helper.h"
    // #include "zmk-helpers/key-labels/42.h"
    // #include "zmk-helpers/unicode-chars/french.dtsi"
    // #define ___ &trans
    // #define BAS 0
    // #define SYM 1
    // #define NAV 2
    // /* Timeless homerow mods */
    // // https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods
    // #define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
    // #define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
    // #define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // thumbs
    // /* Left-hand HRMs. */
    // ZMK_HOLD_TAP(hml,
    //     flavor = "tap-preferred";
    //     tapping-term-ms = <200>;
    //     quick-tap-ms = <200>;
    //     require-prior-idle-ms = <125>;
    //     bindings = <&kp>, <&kp>;
    //     hold-trigger-key-positions = <KEYS_R THUMBS>;
    //     hold-trigger-on-release;
    // )
    // /* Right-hand HRMs. */
    // ZMK_HOLD_TAP(hmr,
    //     flavor = "tap-preferred";
    //     tapping-term-ms = <200>;
    //     quick-tap-ms = <200>;
    //     require-prior-idle-ms = <125>;
    //     bindings = <&kp>, <&kp>;
    //     hold-trigger-key-positions = <KEYS_L THUMBS>;
    //     hold-trigger-on-release;
    // )
    // /* Custom behaviors */
    // &lt {
    //     flavor = "tap-preferred";
    //     tapping-term-ms = <200>;
    //     quick-tap-ms = <200>;
    //     require-prior-idle-ms = <125>;
    // };
    // &caps_word
    // {
    //     continue-list = <UNDERSCORE MINUS>;
    // };
    // ZMK_BEHAVIOR(macro_caret, macro,
    //     bindings = <&kp LEFT_BRACKET &kp SPACE>;
    // )
    // /* Keymap */
    // ZMK_LAYER(base,
    //     // ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮   ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮
    //          &kp NUBS                 &kp Q                    &kp W                    &kp E                    &kp R                    &kp T                        &kp Y                    &kp U                    &kp I                    &kp O                    &kp P                    &kp RIGHT_BRACKET
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          &kp TAB                  &hml LCTRL A             &hml LSHIFT S            &hml LALT D              &hml LCMD F              &kp G                        &kp H                    &hmr RCMD J              &hmr RALT K              &hmr RSHIFT L            &hmr RCTRL SEMICOLON     &kp BACKSLASH
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          &caps_word               &kp Z                    &kp X                    &kp C                    &kp V                    &kp B                        &kp N                    &kp M                    &kp COMMA                &kp DOT                  &kp SLASH                &kp SINGLE_QUOTE
    //     // ╰────────────────────────┴────────────────────────┴────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┴────────────────────────┴────────────────────────╯
    //                                                                                     ___                      &lt NAV ESCAPE           &lt SYM SPACE                &lt SYM ENTER            &lt NAV BACKSPACE        ___
    //     //                                                                            ╰────────────────────────┴────────────────────────┴────────────────────────╯   ╰────────────────────────┴────────────────────────┴────────────────────────╯
    // )
    // ZMK_LAYER(symbols,
    //     // ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮   ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮
    //          &kp RA(NUBS)             &kp EXCLAMATION          &kp AT_SIGN              &kp HASH                 &kp DOLLAR               &kp PERCENT                  &kp RS(N6)               &kp AMPERSAND            &kp ASTERISK             &macro_caret             &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          ___                      ___                      ___                      ___                      ___                      ___                          &kp RA(RIGHT_BRACKET)    &kp MINUS                &kp EQUAL                &kp PLUS                 &kp RA(N9)               &kp RA(N0)
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          ___                      ___                      ___                      ___                      ___                      ___                          ___                      &kp UNDERSCORE           &kp RA(COMMA)            &kp RA(DOT)              &kp RA(N7)               &kp RA(N8)
    //     // ╰────────────────────────┴────────────────────────┴────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┴────────────────────────┴────────────────────────╯
    //                                                                                     ___                      ___                      ___                          ___                      ___                      ___
    //     //                                                                            ╰────────────────────────┴────────────────────────┴────────────────────────╯   ╰────────────────────────┴────────────────────────┴────────────────────────╯
    // )
    // ZMK_LAYER(system,
    //     // ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮   ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮
    //          &kp F1                   &kp F2                   &kp F3                   &kp F4                   &kp F5                   &kp F6                       &kp F7                   &kp F8                   &kp F9                   &kp F10                  &kp F11                  &kp F12
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          ___                      ___                      ___                      ___                      ___                      ___                          &kp LEFT                 &kp DOWN                 &kp UP                   &kp RIGHT                ___                      ___
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          ___                      ___                      ___                      ___                      ___                      ___                          &kp HOME                 &kp PAGE_DOWN            &kp PAGE_UP              &kp END                  ___                      ___
    //     // ╰────────────────────────┴────────────────────────┴────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┴────────────────────────┴────────────────────────╯
    //                                                                                     ___                      ___                      ___                          ___                      ___                      ___
    //     //                                                                            ╰────────────────────────┴────────────────────────┴────────────────────────╯   ╰────────────────────────┴────────────────────────┴────────────────────────╯
    // )
};
