#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { quick-tap-ms = <125>; };

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE MINUS>; };

/ {
    behaviors {
        lhmt: left_hand_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_mod_tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        rhmt: right_hand_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_mod_tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    macros {
        macro_caret: caret_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_BRACKET &kp SPACE>,
                <&macro_release>,
                <&kp SPACE &kp LEFT_BRACKET>;

            label = "CARET_MACRO";
        };

        macro_grave: macro_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &kp LEFT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_ALT &kp LEFT_BRACKET>,
                <&macro_tap>,
                <&kp SPACE>;

            label = "MACRO_GRAVE";
        };
    };

    combos {
        compatible = "zmk,combos";

        reset_bluetooth {
            bindings = <&bt BT_CLR>;
            key-positions = <0 38 39 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp TAB     &kp Q                 &kp W               &kp E                       &kp R             &kp T          &kp Y        &kp U              &kp I                        &kp O                &kp P                     &none
&caps_word  &lhmt LEFT_CONTROL A  &lhmt LEFT_SHIFT S  &lhmt LEFT_ALT D            &lhmt LEFT_GUI F  &kp G          &kp H        &rhmt RIGHT_GUI J  &rhmt RIGHT_ALT K            &rhmt RIGHT_SHIFT L  &rhmt RIGHT_CONTROL SEMI  &none
&kp LG(C)   &kp LG(V)             &kp Z               &kp X                       &kp C             &kp V          &kp B        &kp N              &kp M                        &kp COMMA            &kp PERIOD                &none
                                                      &kp LG(LC(LA(LEFT_SHIFT)))  &lt 2 ESCAPE      &lt 1 ENTER    &lt 1 SPACE  &lt 2 BACKSPACE    &kp RG(RC(RA(RIGHT_SHIFT)))
            >;

            label = "base";
        };

        Symbols {
            bindings = <
&kp RA(NON_US_BACKSLASH)  &kp EXCLAMATION                 &kp AT_SIGN                   &kp POUND                   &macro_caret                    &kp PERCENT        &kp RS(NUMBER_6)  &kp AMPERSAND                    &kp ASTERISK                 &kp RA(RBKT)                   &kp LEFT_PARENTHESIS             &kp RIGHT_PARENTHESIS
&kp NON_US_BACKSLASH      &lhmt LEFT_CONTROL KP_NUMBER_1  &lhmt LEFT_SHIFT KP_NUMBER_2  &lhmt LEFT_ALT KP_NUMBER_3  &lhmt LEFT_COMMAND KP_NUMBER_4  &kp KP_NUMBER_5    &kp KP_NUMBER_6   &rhmt RIGHT_COMMAND KP_NUMBER_7  &rhmt RIGHT_ALT KP_NUMBER_8  &rhmt RIGHT_SHIFT KP_NUMBER_9  &rhmt RIGHT_CONTROL KP_NUMBER_0  &kp DOLLAR
&kp RS(NON_US_BACKSLASH)  &macro_grave                    &kp EQUAL                     &kp PLUS                    &kp MINUS                       &kp UNDERSCORE     &kp RA(N7)        &kp RA(N8)                       &kp RA(COMMA)                &kp RA(PERIOD)                 &kp RA(N9)                       &kp RA(N0)
                                                                                        &trans                      &trans                          &trans             &trans            &trans                           &trans
            >;

            label = "symbols";
        };

        Control {
            bindings = <
&kp F1   &kp F2            &kp F3          &kp F4        &kp F5            &kp F6    &kp F7          &kp F8         &kp F9        &kp F10    &kp F11     &kp F12
&none    &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_COMMAND  &none     &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none       &none
&kp F13  &none             &none           &none         &none             &none     &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &bt BT_PRV  &bt BT_NXT
                                           &trans        &trans            &none     &none           &trans         &trans
            >;

            label = "control";
        };
    };

    // #define HOST_OS 2 // macOS
    // #include "zmk-helpers/helper.h"
    // #include "zmk-helpers/key-labels/42.h"
    // #include "zmk-helpers/unicode-chars/french.dtsi"
    // #define ___ &trans
    // #define BAS 0
    // #define SYM 1
    // #define NAV 2
    // /* Timeless homerow mods */
    // // https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods
    // #define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
    // #define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
    // #define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // thumbs
    // /* Left-hand HRMs. */
    // ZMK_HOLD_TAP(hml,
    //     flavor = "tap-preferred";
    //     tapping-term-ms = <200>;
    //     quick-tap-ms = <200>;
    //     require-prior-idle-ms = <125>;
    //     bindings = <&kp>, <&kp>;
    //     hold-trigger-key-positions = <KEYS_R THUMBS>;
    //     hold-trigger-on-release;
    // )
    // /* Right-hand HRMs. */
    // ZMK_HOLD_TAP(hmr,
    //     flavor = "tap-preferred";
    //     tapping-term-ms = <200>;
    //     quick-tap-ms = <200>;
    //     require-prior-idle-ms = <125>;
    //     bindings = <&kp>, <&kp>;
    //     hold-trigger-key-positions = <KEYS_L THUMBS>;
    //     hold-trigger-on-release;
    // )
    // /* Custom behaviors */
    // &lt {
    //     flavor = "tap-preferred";
    //     tapping-term-ms = <200>;
    //     quick-tap-ms = <200>;
    //     require-prior-idle-ms = <125>;
    // };
    // &caps_word
    // {
    //     continue-list = <UNDERSCORE MINUS>;
    // };
    // ZMK_BEHAVIOR(macro_caret, macro,
    //     bindings = <&kp LEFT_BRACKET &kp SPACE>;
    // )
    // /* Keymap */
    // ZMK_LAYER(base,
    //     // ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮   ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮
    //          &kp NUBS                 &kp Q                    &kp W                    &kp E                    &kp R                    &kp T                        &kp Y                    &kp U                    &kp I                    &kp O                    &kp P                    &kp RIGHT_BRACKET
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          &kp TAB                  &hml LCTRL A             &hml LSHIFT S            &hml LALT D              &hml LCMD F              &kp G                        &kp H                    &hmr RCMD J              &hmr RALT K              &hmr RSHIFT L            &hmr RCTRL SEMICOLON     &kp BACKSLASH
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          &caps_word               &kp Z                    &kp X                    &kp C                    &kp V                    &kp B                        &kp N                    &kp M                    &kp COMMA                &kp DOT                  &kp SLASH                &kp SINGLE_QUOTE
    //     // ╰────────────────────────┴────────────────────────┴────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┴────────────────────────┴────────────────────────╯
    //                                                                                     ___                      &lt NAV ESCAPE           &lt SYM SPACE                &lt SYM ENTER            &lt NAV BACKSPACE        ___
    //     //                                                                            ╰────────────────────────┴────────────────────────┴────────────────────────╯   ╰────────────────────────┴────────────────────────┴────────────────────────╯
    // )
    // ZMK_LAYER(symbols,
    //     // ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮   ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮
    //          &kp RA(NUBS)             &kp EXCLAMATION          &kp AT_SIGN              &kp HASH                 &kp DOLLAR               &kp PERCENT                  &kp RS(N6)               &kp AMPERSAND            &kp ASTERISK             &macro_caret             &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          ___                      ___                      ___                      ___                      ___                      ___                          &kp RA(RIGHT_BRACKET)    &kp MINUS                &kp EQUAL                &kp PLUS                 &kp RA(N9)               &kp RA(N0)
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          ___                      ___                      ___                      ___                      ___                      ___                          ___                      &kp UNDERSCORE           &kp RA(COMMA)            &kp RA(DOT)              &kp RA(N7)               &kp RA(N8)
    //     // ╰────────────────────────┴────────────────────────┴────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┴────────────────────────┴────────────────────────╯
    //                                                                                     ___                      ___                      ___                          ___                      ___                      ___
    //     //                                                                            ╰────────────────────────┴────────────────────────┴────────────────────────╯   ╰────────────────────────┴────────────────────────┴────────────────────────╯
    // )
    // ZMK_LAYER(system,
    //     // ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮   ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮
    //          &kp F1                   &kp F2                   &kp F3                   &kp F4                   &kp F5                   &kp F6                       &kp F7                   &kp F8                   &kp F9                   &kp F10                  &kp F11                  &kp F12
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          ___                      ___                      ___                      ___                      ___                      ___                          &kp LEFT                 &kp DOWN                 &kp UP                   &kp RIGHT                ___                      ___
    //     // ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤
    //          ___                      ___                      ___                      ___                      ___                      ___                          &kp HOME                 &kp PAGE_DOWN            &kp PAGE_UP              &kp END                  ___                      ___
    //     // ╰────────────────────────┴────────────────────────┴────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤   ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┴────────────────────────┴────────────────────────╯
    //                                                                                     ___                      ___                      ___                          ___                      ___                      ___
    //     //                                                                            ╰────────────────────────┴────────────────────────┴────────────────────────╯   ╰────────────────────────┴────────────────────────┴────────────────────────╯
    // )
};
